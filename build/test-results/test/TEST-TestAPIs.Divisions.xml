<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TestAPIs.Divisions" tests="8" skipped="0" failures="1" errors="0" timestamp="2018-12-10T18:47:06" hostname="Ankurs-MacBook-Pro.local" time="4.509">
  <properties/>
  <testcase name="divisionRequestWithFutureYear" classname="TestAPIs.Divisions" time="1.307"/>
  <testcase name="divisionRequestWithIncorrectAccountSecret" classname="TestAPIs.Divisions" time="0.479">
    <failure message="java.lang.AssertionError: 1 expectation failed.&#10;Expected status code &lt;400&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError">java.lang.AssertionError: 1 expectation failed.
Expected status code &lt;400&gt; but was &lt;200&gt;.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at TestAPIs.Divisions.divisionRequestWithIncorrectAccountSecret(Divisions.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:421)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="divisionRequestWithIncorrectRegionCode" classname="TestAPIs.Divisions" time="0.429"/>
  <testcase name="divisionRequestWithIncorrectService" classname="TestAPIs.Divisions" time="0.3"/>
  <testcase name="divisionRequestWithIncorrectYearFormat" classname="TestAPIs.Divisions" time="0.259"/>
  <testcase name="divisionRequestWithInvalidYear" classname="TestAPIs.Divisions" time="0.435"/>
  <testcase name="divisionsRequest" classname="TestAPIs.Divisions" time="0.687"/>
  <testcase name="divisionsRequestWithIncorrectAccountNumber" classname="TestAPIs.Divisions" time="0.607"/>
  <system-out><![CDATA[on test start
HTTP/1.1 404 
Date: Mon, 10 Dec 2018 18:47:08 GMT
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Connection: keep-alive

{
    "timestamp": "2018-12-10T18:47:08.030+0000",
    "status": 404,
    "error": "Not Found",
    "message": "No message available",
    "path": "/chrome/division"
}
on test success
Request method:	POST
Request URI:	https://lb.api.chrome.traderev.com/chrome/divisions?year=2000
Proxy:			<none>
Request params:	<none>
Query params:	year=2000
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "accountSecret": "85759a777a2a4abc",
    "service": "drivin",
    "accountNumber": 276700,
    "region": "us"
}

HTTP/1.1 200 
Date: Mon, 10 Dec 2018 18:47:08 GMT
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Connection: keep-alive

{
    "responseStatus": {
        "matchedEquipment": [
            
        ],
        "matchedNonFactoryEquipment": [
            
        ],
        "status": [
            
        ],
        "responseCode": "Successful",
        "description": "Successful"
    },
    "division": [
        {
            "value": "Acura",
            "id": 1
        },
        {
            "value": "AM General",
            "id": 3
        },
        {
            "value": "Audi",
            "id": 4
        },
        {
            "value": "BMW",
            "id": 5
        },
        {
            "value": "Buick",
            "id": 6
        },
        {
            "value": "Cadillac",
            "id": 7
        },
        {
            "value": "Chevrolet",
            "id": 8
        },
        {
            "value": "Chrysler",
            "id": 9
        },
        {
            "value": "Daewoo",
            "id": 55
        },
        {
            "value": "Dodge",
            "id": 11
        },
        {
            "value": "Ford",
            "id": 13
        },
        {
            "value": "GMC",
            "id": 15
        },
        {
            "value": "Honda",
            "id": 16
        },
        {
            "value": "Hyundai",
            "id": 17
        },
        {
            "value": "INFINITI",
            "id": 18
        },
        {
            "value": "Isuzu",
            "id": 19
        },
        {
            "value": "Jaguar",
            "id": 20
        },
        {
            "value": "Jeep",
            "id": 21
        },
        {
            "value": "Kia",
            "id": 22
        },
        {
            "value": "Land Rover",
            "id": 23
        },
        {
            "value": "Lexus",
            "id": 24
        },
        {
            "value": "Lincoln",
            "id": 25
        },
        {
            "value": "Mazda",
            "id": 26
        },
        {
            "value": "Mercedes-Benz",
            "id": 27
        },
        {
            "value": "Mercury",
            "id": 28
        },
        {
            "value": "Mitsubishi",
            "id": 29
        },
        {
            "value": "Nissan",
            "id": 30
        },
        {
            "value": "Oldsmobile",
            "id": 31
        },
        {
            "value": "Plymouth",
            "id": 32
        },
        {
            "value": "Pontiac",
            "id": 33
        },
        {
            "value": "Porsche",
            "id": 34
        },
        {
            "value": "Saab",
            "id": 35
        },
        {
            "value": "Saturn",
            "id": 36
        },
        {
            "value": "Subaru",
            "id": 37
        },
        {
            "value": "Suzuki",
            "id": 38
        },
        {
            "value": "Toyota",
            "id": 39
        },
        {
            "value": "Volkswagen",
            "id": 40
        },
        {
            "value": "Volvo",
            "id": 41
        }
    ]
}
on test failure
HTTP/1.1 404 
Date: Mon, 10 Dec 2018 18:47:09 GMT
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Connection: keep-alive

{
    "timestamp": "2018-12-10T18:47:09.025+0000",
    "status": 404,
    "error": "Not Found",
    "message": "No message available",
    "path": "/chrome/division"
}
on test success
HTTP/1.1 404 
Date: Mon, 10 Dec 2018 18:47:09 GMT
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Connection: keep-alive

{
    "timestamp": "2018-12-10T18:47:09.279+0000",
    "status": 404,
    "error": "Not Found",
    "message": "No message available",
    "path": "/chrome/division"
}
on test success
HTTP/1.1 404 
Date: Mon, 10 Dec 2018 18:47:09 GMT
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Connection: keep-alive

{
    "timestamp": "2018-12-10T18:47:09.605+0000",
    "status": 404,
    "error": "Not Found",
    "message": "No message available",
    "path": "/chrome/division"
}
on test success
HTTP/1.1 404 
Date: Mon, 10 Dec 2018 18:47:10 GMT
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Connection: keep-alive

{
    "timestamp": "2018-12-10T18:47:10.030+0000",
    "status": 404,
    "error": "Not Found",
    "message": "No message available",
    "path": "/chrome/division"
}
on test success
HTTP/1.1 200 
Date: Mon, 10 Dec 2018 18:47:10 GMT
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Connection: keep-alive

{
    "responseStatus": {
        "matchedEquipment": [
            
        ],
        "matchedNonFactoryEquipment": [
            
        ],
        "status": [
            
        ],
        "responseCode": "Successful",
        "description": "Successful"
    },
    "division": [
        {
            "value": "Acura",
            "id": 1
        },
        {
            "value": "AM General",
            "id": 3
        },
        {
            "value": "Audi",
            "id": 4
        },
        {
            "value": "BMW",
            "id": 5
        },
        {
            "value": "Buick",
            "id": 6
        },
        {
            "value": "Cadillac",
            "id": 7
        },
        {
            "value": "Chevrolet",
            "id": 8
        },
        {
            "value": "Chrysler",
            "id": 9
        },
        {
            "value": "Daewoo",
            "id": 55
        },
        {
            "value": "Dodge",
            "id": 11
        },
        {
            "value": "Ford",
            "id": 13
        },
        {
            "value": "GMC",
            "id": 15
        },
        {
            "value": "Honda",
            "id": 16
        },
        {
            "value": "Hyundai",
            "id": 17
        },
        {
            "value": "INFINITI",
            "id": 18
        },
        {
            "value": "Isuzu",
            "id": 19
        },
        {
            "value": "Jaguar",
            "id": 20
        },
        {
            "value": "Jeep",
            "id": 21
        },
        {
            "value": "Kia",
            "id": 22
        },
        {
            "value": "Land Rover",
            "id": 23
        },
        {
            "value": "Lexus",
            "id": 24
        },
        {
            "value": "Lincoln",
            "id": 25
        },
        {
            "value": "Mazda",
            "id": 26
        },
        {
            "value": "Mercedes-Benz",
            "id": 27
        },
        {
            "value": "Mercury",
            "id": 28
        },
        {
            "value": "Mitsubishi",
            "id": 29
        },
        {
            "value": "Nissan",
            "id": 30
        },
        {
            "value": "Oldsmobile",
            "id": 31
        },
        {
            "value": "Plymouth",
            "id": 32
        },
        {
            "value": "Pontiac",
            "id": 33
        },
        {
            "value": "Porsche",
            "id": 34
        },
        {
            "value": "Saab",
            "id": 35
        },
        {
            "value": "Saturn",
            "id": 36
        },
        {
            "value": "Subaru",
            "id": 37
        },
        {
            "value": "Suzuki",
            "id": 38
        },
        {
            "value": "Toyota",
            "id": 39
        },
        {
            "value": "Volkswagen",
            "id": 40
        },
        {
            "value": "Volvo",
            "id": 41
        }
    ]
}
on test success
HTTP/1.1 200 
Date: Mon, 10 Dec 2018 18:47:11 GMT
Content-Type: application/json;charset=UTF-8
Transfer-Encoding: chunked
Connection: keep-alive

{
    "responseStatus": {
        "matchedEquipment": [
            
        ],
        "matchedNonFactoryEquipment": [
            
        ],
        "status": [
            
        ],
        "responseCode": "Successful",
        "description": "Successful"
    },
    "division": [
        {
            "value": "Acura",
            "id": 1
        },
        {
            "value": "AM General",
            "id": 3
        },
        {
            "value": "Audi",
            "id": 4
        },
        {
            "value": "BMW",
            "id": 5
        },
        {
            "value": "Buick",
            "id": 6
        },
        {
            "value": "Cadillac",
            "id": 7
        },
        {
            "value": "Chevrolet",
            "id": 8
        },
        {
            "value": "Chrysler",
            "id": 9
        },
        {
            "value": "Daewoo",
            "id": 55
        },
        {
            "value": "Dodge",
            "id": 11
        },
        {
            "value": "Ford",
            "id": 13
        },
        {
            "value": "GMC",
            "id": 15
        },
        {
            "value": "Honda",
            "id": 16
        },
        {
            "value": "Hyundai",
            "id": 17
        },
        {
            "value": "INFINITI",
            "id": 18
        },
        {
            "value": "Isuzu",
            "id": 19
        },
        {
            "value": "Jaguar",
            "id": 20
        },
        {
            "value": "Jeep",
            "id": 21
        },
        {
            "value": "Kia",
            "id": 22
        },
        {
            "value": "Land Rover",
            "id": 23
        },
        {
            "value": "Lexus",
            "id": 24
        },
        {
            "value": "Lincoln",
            "id": 25
        },
        {
            "value": "Mazda",
            "id": 26
        },
        {
            "value": "Mercedes-Benz",
            "id": 27
        },
        {
            "value": "Mercury",
            "id": 28
        },
        {
            "value": "Mitsubishi",
            "id": 29
        },
        {
            "value": "Nissan",
            "id": 30
        },
        {
            "value": "Oldsmobile",
            "id": 31
        },
        {
            "value": "Plymouth",
            "id": 32
        },
        {
            "value": "Pontiac",
            "id": 33
        },
        {
            "value": "Porsche",
            "id": 34
        },
        {
            "value": "Saab",
            "id": 35
        },
        {
            "value": "Saturn",
            "id": 36
        },
        {
            "value": "Subaru",
            "id": 37
        },
        {
            "value": "Suzuki",
            "id": 38
        },
        {
            "value": "Toyota",
            "id": 39
        },
        {
            "value": "Volkswagen",
            "id": 40
        },
        {
            "value": "Volvo",
            "id": 41
        }
    ]
}
on test success
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
