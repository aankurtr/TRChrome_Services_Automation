<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="22" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="12845" started-at="2018-12-10T18:47:06Z" finished-at="2018-12-10T18:47:19Z">
    <groups>
    </groups>
    <test name="Test1" duration-ms="12845" started-at="2018-12-10T18:47:06Z" finished-at="2018-12-10T18:47:19Z">
      <class name="TestAPIs.Styles">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Styles@903f8b8]" name="setup" is-config="true" duration-ms="1" started-at="2018-12-10T12:47:16Z" finished-at="2018-12-10T12:47:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="stylesRequest()[pri:0, instance:TestAPIs.Styles@903f8b8]" name="stylesRequest" duration-ms="865" started-at="2018-12-10T12:47:16Z" finished-at="2018-12-10T12:47:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stylesRequest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Styles@903f8b8]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:17Z" finished-at="2018-12-10T12:47:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="stylesRequestIncorrectModelIdFormat()[pri:0, instance:TestAPIs.Styles@903f8b8]" name="stylesRequestIncorrectModelIdFormat" duration-ms="463" started-at="2018-12-10T12:47:17Z" finished-at="2018-12-10T12:47:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stylesRequestIncorrectModelIdFormat -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Styles@903f8b8]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:17Z" finished-at="2018-12-10T12:47:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="stylesRequestInvalidModelId()[pri:0, instance:TestAPIs.Styles@903f8b8]" name="stylesRequestInvalidModelId" duration-ms="587" started-at="2018-12-10T12:47:17Z" finished-at="2018-12-10T12:47:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stylesRequestInvalidModelId -->
      </class> <!-- TestAPIs.Styles -->
      <class name="TestAPIs.Models">
        <test-method status="PASS" signature="modelsRequest()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="modelsRequest" duration-ms="467" started-at="2018-12-10T12:47:11Z" finished-at="2018-12-10T12:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsRequest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:11Z" finished-at="2018-12-10T12:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="setup" is-config="true" duration-ms="1" started-at="2018-12-10T12:47:11Z" finished-at="2018-12-10T12:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="modelsRequestDivisionIdOtherThan1()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="modelsRequestDivisionIdOtherThan1" duration-ms="587" started-at="2018-12-10T12:47:11Z" finished-at="2018-12-10T12:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsRequestDivisionIdOtherThan1 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:12Z" finished-at="2018-12-10T12:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="modelsRequestFutureYear()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="modelsRequestFutureYear" duration-ms="495" started-at="2018-12-10T12:47:12Z" finished-at="2018-12-10T12:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsRequestFutureYear -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:12Z" finished-at="2018-12-10T12:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="modelsRequestInvalidAccountSecret()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="modelsRequestInvalidAccountSecret" duration-ms="490" started-at="2018-12-10T12:47:12Z" finished-at="2018-12-10T12:47:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <500>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at TestAPIs.Models.modelsRequestInvalidAccountSecret(Models.java:220)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:421)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsRequestInvalidAccountSecret -->
        <test-method status="FAIL" signature="modelsRequestInvalidAccoutNumber()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="modelsRequestInvalidAccoutNumber" duration-ms="725" started-at="2018-12-10T12:47:13Z" finished-at="2018-12-10T12:47:14Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <500>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at TestAPIs.Models.modelsRequestInvalidAccoutNumber(Models.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:421)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsRequestInvalidAccoutNumber -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:13Z" finished-at="2018-12-10T12:47:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:14Z" finished-at="2018-12-10T12:47:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="modelsRequestInvalidDivisionIDFormat()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="modelsRequestInvalidDivisionIDFormat" duration-ms="391" started-at="2018-12-10T12:47:14Z" finished-at="2018-12-10T12:47:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsRequestInvalidDivisionIDFormat -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:14Z" finished-at="2018-12-10T12:47:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="modelsRequestInvalidRegionCode()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="modelsRequestInvalidRegionCode" duration-ms="634" started-at="2018-12-10T12:47:14Z" finished-at="2018-12-10T12:47:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsRequestInvalidRegionCode -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="setup" is-config="true" duration-ms="1" started-at="2018-12-10T12:47:15Z" finished-at="2018-12-10T12:47:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="modelsRequestInvalidService()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="modelsRequestInvalidService" duration-ms="771" started-at="2018-12-10T12:47:15Z" finished-at="2018-12-10T12:47:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <500>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
	at sun.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at TestAPIs.Models.modelsRequestInvalidService(Models.java:277)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:421)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsRequestInvalidService -->
        <test-method status="PASS" signature="modelsRequestInvalidYearFormat()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="modelsRequestInvalidYearFormat" duration-ms="513" started-at="2018-12-10T12:47:15Z" finished-at="2018-12-10T12:47:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modelsRequestInvalidYearFormat -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Models@5d2a0681]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:15Z" finished-at="2018-12-10T12:47:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- TestAPIs.Models -->
      <class name="TestAPIs.Vin">
        <test-method status="PASS" signature="vehicleDescriptionVehicleVin()[pri:1, instance:TestAPIs.Vin@3423fc9]" name="vehicleDescriptionVehicleVin" duration-ms="661" started-at="2018-12-10T12:47:18Z" finished-at="2018-12-10T12:47:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleDescriptionVehicleVin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestAPIs.Vin@3423fc9]" name="setUp" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:18Z" finished-at="2018-12-10T12:47:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestAPIs.Vin@3423fc9]" name="setUp" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:19Z" finished-at="2018-12-10T12:47:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="vehicleDescriptionVehicleSpecificInformationByVin()[pri:2, instance:TestAPIs.Vin@3423fc9]" name="vehicleDescriptionVehicleSpecificInformationByVin" duration-ms="553" started-at="2018-12-10T12:47:19Z" finished-at="2018-12-10T12:47:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vehicleDescriptionVehicleSpecificInformationByVin -->
      </class> <!-- TestAPIs.Vin -->
      <class name="TestAPIs.Divisions">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="setup" is-config="true" duration-ms="3" started-at="2018-12-10T12:47:06Z" finished-at="2018-12-10T12:47:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="divisionRequestWithFutureYear()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="divisionRequestWithFutureYear" duration-ms="1307" started-at="2018-12-10T12:47:06Z" finished-at="2018-12-10T12:47:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionRequestWithFutureYear -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:08Z" finished-at="2018-12-10T12:47:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="divisionRequestWithIncorrectAccountSecret()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="divisionRequestWithIncorrectAccountSecret" duration-ms="479" started-at="2018-12-10T12:47:08Z" finished-at="2018-12-10T12:47:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:169)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
	at TestAPIs.Divisions.divisionRequestWithIncorrectAccountSecret(Divisions.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:421)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionRequestWithIncorrectAccountSecret -->
        <test-method status="PASS" signature="divisionRequestWithIncorrectRegionCode()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="divisionRequestWithIncorrectRegionCode" duration-ms="429" started-at="2018-12-10T12:47:08Z" finished-at="2018-12-10T12:47:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionRequestWithIncorrectRegionCode -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:08Z" finished-at="2018-12-10T12:47:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="divisionRequestWithIncorrectService()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="divisionRequestWithIncorrectService" duration-ms="300" started-at="2018-12-10T12:47:09Z" finished-at="2018-12-10T12:47:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionRequestWithIncorrectService -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:09Z" finished-at="2018-12-10T12:47:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="divisionRequestWithIncorrectYearFormat()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="divisionRequestWithIncorrectYearFormat" duration-ms="259" started-at="2018-12-10T12:47:09Z" finished-at="2018-12-10T12:47:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionRequestWithIncorrectYearFormat -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:09Z" finished-at="2018-12-10T12:47:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:09Z" finished-at="2018-12-10T12:47:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="divisionRequestWithInvalidYear()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="divisionRequestWithInvalidYear" duration-ms="435" started-at="2018-12-10T12:47:09Z" finished-at="2018-12-10T12:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionRequestWithInvalidYear -->
        <test-method status="PASS" signature="divisionsRequest()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="divisionsRequest" duration-ms="687" started-at="2018-12-10T12:47:10Z" finished-at="2018-12-10T12:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionsRequest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:10Z" finished-at="2018-12-10T12:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="setup" is-config="true" duration-ms="0" started-at="2018-12-10T12:47:10Z" finished-at="2018-12-10T12:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="divisionsRequestWithIncorrectAccountNumber()[pri:0, instance:TestAPIs.Divisions@687e60c]" name="divisionsRequestWithIncorrectAccountNumber" duration-ms="607" started-at="2018-12-10T12:47:10Z" finished-at="2018-12-10T12:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionsRequestWithIncorrectAccountNumber -->
      </class> <!-- TestAPIs.Divisions -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
